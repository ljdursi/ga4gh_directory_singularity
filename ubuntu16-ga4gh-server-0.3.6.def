# Xenial image for installing and running GA4GH server from sources

BootStrap: debootstrap
OSVersion: xenial
MirrorURL: http://us.archive.ubuntu.com/ubuntu/
Include: bash build-essential python2.7 apache2 git libssl-dev libcurl4-openssl-dev libffi-dev libapache2-mod-wsgi

%setup
    mkdir -p "${SINGULARITY_ROOTFS}/srv/ga4gh"
    mkdir -p "${SINGULARITY_ROOTFS}/usr/local/bin"
    mkdir -p "${SINGULARITY_ROOTFS}/etc/apache2/sites-available"

    # copy scripts and config files first
    # scripts:
    cp ./scripts/create_repo.sh "${SINGULARITY_ROOTFS}/usr/local/bin"
    cp ./scripts/rename_directory.sh "${SINGULARITY_ROOTFS}/usr/local/bin"
    cp ./scripts/wrapper.sh "${SINGULARITY_ROOTFS}/usr/local/bin"

    # config files:
    cp ./config/application.wsgi "${SINGULARITY_ROOTFS}/srv/ga4gh/application.wsgi"
    cp ./config/application.wsgi "${SINGULARITY_ROOTFS}/srv/ga4gh/application.wsgi.tmpl"
    cp ./config/config.py "${SINGULARITY_ROOTFS}/srv/ga4gh/config.py"
    cp ./config/config.py "${SINGULARITY_ROOTFS}/srv/ga4gh/config.py.tmpl"
    cp ./config/000-default.conf "${SINGULARITY_ROOTFS}/etc/apache2/sites-enabled/000-default.conf"
    cp ./config/000-default.conf "${SINGULARITY_ROOTFS}/etc/apache2/sites-enabled/000-default.conf.tmpl"
    cp ./config/ports.conf "${SINGULARITY_ROOTFS}/etc/apache2/ports.conf"
    cp ./config/ports.conf "${SINGULARITY_ROOTFS}/etc/apache2/ports.conf.tmpl"
    cp ./config/envvars "${SINGULARITY_ROOTFS}/etc/apache2/envvars"
    cp ./config/envvars "${SINGULARITY_ROOTFS}/etc/apache2/envvars.tmpl"

%post
    locale-gen en_US.UTF-8
    update-locale 
    export LC_ALL=en_US.UTF-8
    apt-get install -y software-properties-common
    apt-add-repository universe
    apt-get update
    apt-get install -y python-pip protobuf-compiler samtools tabix git zlib1g-dev libyaml-cpp-dev libxml2-dev libxslt1-dev

    # make log, run directories
    mkdir -p /tmp/run 
    mkdir -p /tmp/lock

    # start installing the python packages 
    pip install --upgrade --force pip
    pip install protobuf==3.2.0 pyBigWig==0.3.2 cffi==1.5.2 sphinx-argparse

    # Could do pip install, but in general we will be building & installing our own version...
    SERVER_VERSION=0.3.6  
    SCHEMA_VERSION=0.6.0a10   # this is also the client version
    day=$( date +"%Y%m%d" )

    # note: /tmp is bound to "host" /tmp, so clean this up...
    cd /tmp
    git clone https://github.com/ga4gh/ga4gh-schemas.git
    cd ga4gh-schemas
    git checkout tags/v${SCHEMA_VERSION} -b ${SCHEMA_VERSION}
    sed -i".bak" -e 's/protobuf==3.1.0.post1/protobuf==3.2.0/' python/requirements.txt
    rm -f python/constraints.txt
    python setup.py install
    cd ..
    rm -rf ga4gh-schemas

    git clone https://github.com/ga4gh/ga4gh-client.git
    cd ga4gh-client
    git checkout tags/v${SCHEMA_VERSION} -b ${SCHEMA_VERSION}
    sed -i".bak" -e 's/protobuf==3.1.0.post1/protobuf==3.2.0/' -e "s/ga4gh_schemas==0.6.0a10.post1/ga4gh_schemas==0.6.0a11.dev0+ng0328d20.d${day}/" requirements.txt
    rm -f constraints.txt
    python setup.py install
    cd ..
    rm -rf ga4gh-client

    git clone https://github.com/ga4gh/ga4gh-server.git
    cd ga4gh-server
    git checkout tags/v${SERVER_VERSION} -b ${SERVER_VERSION}
    sed -i".bak" -e 's/protobuf==3.1.0.post1/protobuf==3.2.0/' -e "s/ga4gh-schemas==0.6.0a10.post1/ga4gh-schemas==0.6.0a11.dev0+ng0328d20.d${day}/" requirements.txt
    sed -i".bak.bak" -e "s/ga4gh-client==0.6.0a10/ga4gh-client==0.6.0a11.dev0+ng819e965.d${day}/" requirements.txt
    rm -f constraints.txt
    python setup.py install
    cd ..
    rm -rf ga4gh-server

%runscript
    exec /usr/local/bin/wrapper.sh "$@"
